name: Deploy and Test

on: [push]

jobs:
  deploy:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup LLVM, Ninja and vcpkg
        run: |
          brew update # Ensure to use a latest version of Homebrew
          brew install llvm ninja
          echo "CC=$(brew --prefix llvm)/bin/clang" >> "$GITHUB_ENV"
          echo "CXX=$(brew --prefix llvm)/bin/clang++" >> "$GITHUB_ENV"
          git clone https://github.com/microsoft/vcpkg "$HOME/vcpkg"
          echo "VCPKG_ROOT=$HOME/vcpkg" >> "$GITHUB_ENV"

      - name: Cache libc++ build
        id: cache-libcxx
        uses: actions/cache@v4
        with:
          path: llvm-project/build
          key: ${{ runner.os }}-libcxx

      - name: Make local build of libc++ with Standard Library Module (when cache miss)
        if: steps.cache-libcxx.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/llvm/llvm-project.git
          cd llvm-project
          mkdir build
          cmake -G Ninja -S runtimes -B build                   \
            -DLLVM_ENABLE_RUNTIMES="libcxx;libcxxabi;libunwind" \
            -DLLVM_INCLUDE_TESTS=OFF
          ninja -C build

      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.1.1

      - name: Configure
        run: |
          mkdir build
          cmake -S . -B build -G Ninja                                          \
            -DCMAKE_BUILD_TYPE=Release                                          \
            -DLIBCXX_BUILD=${{ github.workspace }}/llvm-project/build           \
            -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake

      - name: Build
        run: cmake --build build -t mipmap --config Release

      - name: Upload executable as artifact
        uses: actions/upload-artifact@v4
        with:
          name: mipmap-${{ runner.os }}
          path: build/mipmap