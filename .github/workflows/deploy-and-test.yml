name: Deploy and Test

on: [push]

jobs:
  deploy:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Add homebrew and vcpkg to PATH (Linux only)
        if: runner.os == 'Linux'
        run: |
          echo "/home/linuxbrew/.linuxbrew/bin" >> $GITHUB_PATH
          echo "VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT" >> "$GITHUB_ENV"

      - name: Install Vulkan SDK
        uses: humbletim/install-vulkan-sdk@v1.1.1

      - name: Get LLVM and Ninja via Homebrew
        run: |
          brew install llvm ninja

      - name: Cache libc++ build
        id: cache-libcxx
        uses: actions/cache@v4
        with:
          path: llvm-project/build
          key: ${{ runner.os }}-libcxx

      - name: Make local build of libc++ with Standard Library Module (when cache miss)
        if: steps.cache-libcxx.outputs.cache-hit != 'true'
        run: |
          git clone https://github.com/llvm/llvm-project.git
          cd llvm-project
          mkdir build
          CC=$(brew --prefix llvm)/bin/clang                    \
          CXX=$(brew --prefix llvm)/bin/clang++                 \
          cmake -G Ninja -S runtimes -B build                   \
            -DLLVM_ENABLE_RUNTIMES="libcxx;libcxxabi;libunwind"
          ninja -C build

      - name: Install vcpkg (macOS only)
        if: runner.os == 'macOS'
        run: |
          brew install vcpkg
          git clone https://github.com/microsoft/vcpkg "$HOME/vcpkg"
          echo "VCPKG_ROOT=$HOME/vcpkg" >> "$GITHUB_ENV"

      - name: Configure
        run: |
          mkdir build
          CC=$(brew --prefix llvm)/bin/clang                                    \
          CXX=$(brew --prefix llvm)/bin/clang++                                 \
          cmake -S . -B build -G Ninja                                          \
            -DCMAKE_BUILD_TYPE=Release                                          \
            -DCMAKE_CXX_FLAGS="-static"                                         \
            -DLIBCXX_BUILD=${{ github.workspace }}/llvm-project/build           \
            -DCMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake

      - name: Build
        run: cmake --build build -t mipmap --config Release

      - name: Upload executable as artifact
        uses: actions/upload-artifact@v4
        with:
          name: mipmap-${{ runner.os }}
          path: build/mipmap

  test:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Download prebuilt executable
        uses: actions/download-artifact@v4
        with:
          name: mipmap-${{ runner.os }}
          path: build

      - name: Set file execution permission
        run: |
          chmod +x build/mipmap

      - name: Install Mesa Vulkan drivers
        run: |
          sudo apt-get install -y mesa-vulkan-drivers

      - name: Run
        run: |
          cd build
          wget "https://vulkan-tutorial.com/images/texture.jpg"
          ./mipmap texture.jpg .

      - name: Upload results as artifact
        uses: actions/upload-artifact@v4
        with:
          name: mipmap-results
          path: build/*.png